{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iqles\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\rock star\\\\berlin_test\\\\src\\\\components\\\\StartingPage\\\\StartingPageContent.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllItems } from \"../../store/api\";\nimport AuthContext from '../../store/auth-context';\nimport classes from './StartingPageContent.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartingPageContent = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [error, setError] = useState(null);\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const fetchMoviesHandler = useCallback(async () => {\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://blindside-test-default-rtdb.firebaseio.com/videos.json\");\n\n      if (!response.ok) {\n        throw new Error(\"sth wrong\");\n      }\n\n      const data = await response.json();\n      setVideos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsFetched(true);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  let showCat = [];\n  let catVideos = [];\n\n  if (isFetched) {\n    //get categories\n    const propertyValues = Object.values(videos);\n    let propValMap = propertyValues.map(v => v.category);\n    let unique = propValMap.filter((v, i, a) => a.indexOf(v) === i);\n    showCat.push(...unique);\n    console.log(videos);\n    console.log(unique); //get videos per category\n\n    const propertysValues = Object.values(videos);\n    catVideos.push(...propertysValues);\n  }\n\n  let renderen = showCat.map(m => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [m, catVideos.filter(f => f.category === m).map(ma => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/videos/:link\",\n        children: ma.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 50\n      }, this)\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this))]\n  }, Math.random(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 35\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.starting,\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: renderen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login to see the content.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartingPageContent, \"keep1L0epKA48opQsUZTlJZGPzM=\");\n\n_c = StartingPageContent;\nexport default StartingPageContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartingPageContent\");","map":{"version":3,"sources":["C:/Users/iqles/OneDrive/Рабочий стол/rock star/berlin_test/src/components/StartingPage/StartingPageContent.js"],"names":["useContext","useEffect","useState","useCallback","Link","getAllItems","AuthContext","classes","StartingPageContent","videos","setVideos","isFetched","setIsFetched","error","setError","authCtx","isLoggedIn","fetchMoviesHandler","response","fetch","ok","Error","data","json","message","showCat","catVideos","propertyValues","Object","values","propValMap","map","v","category","unique","filter","i","a","indexOf","push","console","log","propertysValues","renderen","m","f","ma","link","Math","random","starting"],"mappings":";;;AAAA,SAASA,UAAT,EAAoBC,SAApB,EAA+BC,QAA/B,EAAwCC,WAAxC,QAA2D,OAA3D;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMa,OAAO,GAAGf,UAAU,CAACM,WAAD,CAA1B;AACA,QAAMU,UAAU,GAAGD,OAAO,CAACC,UAA3B;AAGA,QAAMC,kBAAkB,GAAGd,WAAW,CAAC,YAAY;AACjDW,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAb,MAAAA,SAAS,CAACY,IAAD,CAAT;AACD,KAPD,CAOE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;AACD;;AACDZ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAbqC,EAanC,EAbmC,CAAtC;AAeAX,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,kBAAkB;AAAG,GADd,EACe,CAACA,kBAAD,CADf,CAAT;AAGE,MAAIQ,OAAO,GAAC,EAAZ;AACA,MAAIC,SAAS,GAAC,EAAd;;AAEA,MAAGf,SAAH,EAAa;AACX;AACA,UAAMgB,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcpB,MAAd,CAAvB;AACA,QAAIqB,UAAU,GAAGH,cAAc,CAACI,GAAf,CAAmBC,CAAC,IAAGA,CAAC,CAACC,QAAzB,CAAjB;AACA,QAAIC,MAAM,GAAGJ,UAAU,CAACK,MAAX,CAAkB,CAACH,CAAD,EAAII,CAAJ,EAAOC,CAAP,KAAaA,CAAC,CAACC,OAAF,CAAUN,CAAV,MAAiBI,CAAhD,CAAb;AACAX,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAGL,MAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYhC,MAAZ;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAPW,CAQX;;AACA,UAAMQ,eAAe,GAAGd,MAAM,CAACC,MAAP,CAAcpB,MAAd,CAAxB;AACAiB,IAAAA,SAAS,CAACa,IAAV,CAAe,GAAGG,eAAlB;AACD;;AAED,MAAIC,QAAQ,GAAClB,OAAO,CAACM,GAAR,CAAaa,CAAD,iBAAK;AAAA,eAAyBA,CAAzB,EAC7BlB,SAAS,CAACS,MAAV,CAAkBU,CAAD,IAAKA,CAAC,CAACZ,QAAF,KAAaW,CAAnC,EACUb,GADV,CACee,EAAD,iBAAM;AAAA,6BAAwB,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA,kBAA0BA,EAAE,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAxB,OAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,YADpB,CAD6B;AAAA,KAASD,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,UAAjB,CAAb;AAMF,sBACE;AAAS,IAAA,SAAS,EAAE1C,OAAO,CAAC2C,QAA5B;AAAA,eACGlC,UAAU,iBAAI;AAAA,gBAAK2B;AAAL;AAAA;AAAA;AAAA;AAAA,YADjB,EAEG,CAAC3B,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtDD;;GAAMR,mB;;KAAAA,mB;AAwDN,eAAeA,mBAAf","sourcesContent":["import { useContext,useEffect, useState,useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllItems } from \"../../store/api\";\nimport AuthContext from '../../store/auth-context';\nimport classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  const [videos, setVideos] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [error, setError] = useState(null);\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setError(null);\n    try {\n      const response = await fetch(\"https://blindside-test-default-rtdb.firebaseio.com/videos.json\");\n      if (!response.ok) {\n        throw new Error(\"sth wrong\");\n      }\n      const data = await response.json();\n      setVideos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsFetched(true);\n  }, []);\n\n  useEffect(()=>{\n    fetchMoviesHandler()},[fetchMoviesHandler])\n\n    let showCat=[];\n    let catVideos=[]\n\n    if(isFetched){\n      //get categories\n      const propertyValues = Object.values(videos);\n      let propValMap = propertyValues.map(v=>(v.category))\n      let unique = propValMap.filter((v, i, a) => a.indexOf(v) === i);\n      showCat.push(...unique)\n      console.log(videos)\n      console.log(unique)\n      //get videos per category\n      const propertysValues = Object.values(videos);\n      catVideos.push(...propertysValues)\n    }\n\n    let renderen=showCat.map((m)=><ul key={Math.random()}>{m}\n    {catVideos.filter((f)=>f.category===m)\n              .map((ma)=><li key={Math.random()}><Link to='/videos/:link'>{ma.link}</Link></li>)}\n    </ul>)\n  \n  \n  return (\n    <section className={classes.starting}>\n      {isLoggedIn && <h1>{renderen}</h1>}\n      {!isLoggedIn && <h1>Please login to see the content.</h1>}\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n"]},"metadata":{},"sourceType":"module"}