{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iqles\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\rock star\\\\berlin_test\\\\src\\\\components\\\\StartingPage\\\\StartingPageContent.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { getAllItems } from \"../../store/api\";\nimport AuthContext from '../../store/auth-context';\nimport classes from './StartingPageContent.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartingPageContent = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://blindside-test-default-rtdb.firebaseio.com/videos.json\");\n\n      if (!response.ok) {\n        throw new Error(\"sth wrong\");\n      }\n\n      const data = await response.json(); // const tranformedMovies = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n\n      setVideos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    getAllfetchMoviesHandlerItems();\n  }, [fetchMoviesHandler]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.starting,\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome on Board!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login to see the content.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartingPageContent, \"RF1IWokx3RRmrac8blqKfH05sNg=\");\n\n_c = StartingPageContent;\nexport default StartingPageContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartingPageContent\");","map":{"version":3,"sources":["C:/Users/iqles/OneDrive/Рабочий стол/rock star/berlin_test/src/components/StartingPage/StartingPageContent.js"],"names":["useContext","useEffect","useState","getAllItems","AuthContext","classes","StartingPageContent","videos","setVideos","isLoading","setIsLoading","error","setError","authCtx","isLoggedIn","fetchMoviesHandler","useCallback","response","fetch","ok","Error","data","json","message","getAllfetchMoviesHandlerItems","starting"],"mappings":";;;AAAA,SAASA,UAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMW,OAAO,GAAGb,UAAU,CAACI,WAAD,CAA1B;AACA,QAAMU,UAAU,GAAGD,OAAO,CAACC,UAA3B;AAGA,QAAMC,kBAAkB,GAAGC,WAAW,CAAC,YAAY;AACjDN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB,CALE,CAOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAd,MAAAA,SAAS,CAACa,IAAD,CAAT;AACD,KAhBD,CAgBE,OAAOV,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACD;;AACDb,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAvBqC,EAuBnC,EAvBmC,CAAtC;AAyBAT,EAAAA,SAAS,CAAC,MAAI;AACZuB,IAAAA,6BAA6B;AAAG,GADzB,EAC0B,CAACT,kBAAD,CAD1B,CAAT;AAIA,sBACE;AAAS,IAAA,SAAS,EAAEV,OAAO,CAACoB,QAA5B;AAAA,eACGX,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADjB,EAEG,CAACA,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3CD;;GAAMR,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf","sourcesContent":["import { useContext,useEffect, useState } from \"react\";\nimport { getAllItems } from \"../../store/api\";\nimport AuthContext from '../../store/auth-context';\nimport classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://blindside-test-default-rtdb.firebaseio.com/videos.json\");\n      if (!response.ok) {\n        throw new Error(\"sth wrong\");\n      }\n      const data = await response.json();\n\n      // const tranformedMovies = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      setVideos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(()=>{\n    getAllfetchMoviesHandlerItems()},[fetchMoviesHandler])\n  \n  \n  return (\n    <section className={classes.starting}>\n      {isLoggedIn && <h1>Welcome on Board!</h1>}\n      {!isLoggedIn && <h1>Please login to see the content.</h1>}\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n"]},"metadata":{},"sourceType":"module"}