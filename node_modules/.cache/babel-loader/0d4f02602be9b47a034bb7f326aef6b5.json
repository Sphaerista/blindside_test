{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iqles\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\rock star\\\\berlin_test\\\\src\\\\pages\\\\VideoPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useContext, useCallback, useEffect, useState } from \"react\";\nimport AuthContext from \"../store/auth-context\";\nimport { Link } from \"react-router-dom\";\nimport useHttp from \"../store/use-http\";\nimport { getAllItems } from \"../store/api\";\nimport CommentForm from \"../components/StartingPage/CommentForm\";\nimport Comments from \"../components/StartingPage/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoPage = () => {\n  _s();\n\n  const params = useParams();\n  console.log(params);\n  const {\n    idVideo,\n    idCategory\n  } = params;\n  const [videos, setVideos] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const {\n    sendRequest,\n    status,\n    data: data,\n    error\n  } = useHttp(getAllItems, true);\n  useEffect(() => {\n    setComments([]);\n    sendRequest();\n    setVideos(data);\n    setIsFetched(true);\n  }, [sendRequest, params]);\n  let renderen = [];\n\n  if (status === 'completed') {\n    let catVideos = [];\n    const propertysValues = Object.values(data);\n    catVideos.push(...propertysValues);\n    let relevantVideo = catVideos.filter(f => f.category === idCategory && f.title !== idVideo);\n    renderen = relevantVideo.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/videos/${m.category}/${m.link}`,\n        children: m.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 67\n      }, this)\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 43\n    }, this));\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  let updatedComms = [];\n\n  const commentsHnadler = v => {\n    setComments(prevComms => {\n      updatedComms = [...prevComms];\n      updatedComms.push(v);\n      return updatedComms;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: status === 'completed' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: idVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Relative videos for \", idCategory, \" category\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: renderen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        onComments: commentsHnadler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        showComment: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 50\n    }, this)\n  }, void 0, false);\n};\n\n_s(VideoPage, \"Jo8bQuP1s3C/5FYhrscPSC7Xn/8=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = VideoPage;\nexport default VideoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"sources":["C:/Users/iqles/OneDrive/Рабочий стол/rock star/berlin_test/src/pages/VideoPage.js"],"names":["useParams","useContext","useCallback","useEffect","useState","AuthContext","Link","useHttp","getAllItems","CommentForm","Comments","VideoPage","params","console","log","idVideo","idCategory","videos","setVideos","comments","setComments","isFetched","setIsFetched","sendRequest","status","data","error","renderen","catVideos","propertysValues","Object","values","push","relevantVideo","filter","f","category","title","map","m","link","Math","random","updatedComms","commentsHnadler","v","prevComms"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useContext,useCallback,useEffect,useState } from \"react\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useHttp from \"../store/use-http\";\r\nimport { getAllItems } from \"../store/api\";\r\nimport CommentForm from \"../components/StartingPage/CommentForm\";\r\nimport Comments from \"../components/StartingPage/Comments\";\r\n\r\nconst VideoPage=()=>{\r\n    const params = useParams()\r\n    console.log(params)\r\n    const { idVideo,idCategory } = params;\r\n    const [videos, setVideos] = useState([]);\r\n    const [comments,setComments]=useState([]);\r\n    const [isFetched, setIsFetched] = useState(false);\r\n\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: data,\r\n        error,\r\n      } = useHttp(getAllItems, true);\r\n      \r\n      useEffect(() => {\r\n        setComments([])\r\n          sendRequest();\r\n          setVideos(data);\r\n          setIsFetched(true)\r\n        }, [sendRequest,params]);\r\n        \r\n        \r\n        let renderen=[]\r\n\r\n        if(status==='completed'){\r\n        let catVideos=[];\r\n        const propertysValues = Object.values(data);\r\n       catVideos.push(...propertysValues)\r\n        let relevantVideo= catVideos.filter((f)=>(f.category)===idCategory && (f.title)!==idVideo);\r\n        renderen = relevantVideo.map((m)=><li key={Math.random()}><Link to={`/videos/${m.category}/${m.link}`}>{m.link}</Link></li>)\r\n}\r\n\r\nif (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  let updatedComms=[]\r\n  const commentsHnadler=(v)=>{\r\n    setComments(prevComms=>{\r\n        updatedComms = [...prevComms];\r\n        updatedComms.push(v)\r\n        return updatedComms;\r\n    })\r\n  }\r\n\r\n    return(\r\n        <>\r\n        {status==='completed' ? <> <h1>{idVideo}</h1>\r\n        <h2>Relative videos for {idCategory} category</h2>\r\n        <h4>{renderen}</h4>\r\n        <CommentForm onComments={commentsHnadler}/>\r\n        <Comments showComment={comments}/> </> : <h1>LOADING...</h1>}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoPage;"]},"metadata":{},"sourceType":"module"}